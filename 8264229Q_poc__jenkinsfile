pipeline {
      agent any
      stages {
          stage('ST1 8264229q') {
          	steps {
            		echo "ST1 8264229Q: Environment is prepared. Start to rollout to TEST server";
			      sh """
			            docker rmi -f bkup-test-image;
				    docker commit TESTsvr8264229Q bkup-test-image;
			      """
          	}
          }

         stage('ST2 8264229Q') {
	        steps {
			echo "ST2 8264229Q: TEST server is backup and updated";

             		sh '''#!/bin/bash
                	puppet resource file /tmp/8264229Q/work ensure=absent force=true;
			puppet resource file /tmp/8264229Q/ ensure=absent force=true;
			puppet resource file /tmp/8264229Q ensure=directory;
			puppet resource file /tmp/8264229Q/work ensure=directory;
	   		cd /tmp/8264229Q/work;

		        '''

          	}
          }
 	stage('ST3 8264229Q') {
          	steps {
			            sh """
				          curl –Is http://TESTsvr8264229Q.localdomain;
					  pwd;
				          cat /tmp/TEST-result-result;
			            """
			           echo "ST3 8264229Q: Test result for TEST server is generated: TEST-result-file";
         	        }
          }

          stage('ST4 8264229Q') {
		        steps {
			            echo "ST4 8264229Q: TEST server’s testing result has been inspected"
			            script {
                	quest = input ( 
                              message: 'Choice',
                       				parameters: [choice(name:'',choices: ['Proceed Production', 'RollBack Test'])]
                            )
                       }  
	            }
          }

          stage('ST5 8264229Q') {
          	steps {
			        script {
				          if (quest == 'Proceed Production') {
                  		echo "ST5 8264229Q: Proceed to Production Phase"
                			sh '''#!/bin/bash
                			puppet resource file /tmp/8264229Q/work ensure=absent force=true;
                			puppet resource file /tmp/8264229Q/work ensure=directory;
	   				cd /tmp/8264229Q/work;
					git clone https://github.com/jianliangh/poc_repo2.git
					git_clone_pid=$!;
					wait $git_clone_pid;
                			targets=PRODsvr8264229Q;
                			locate_script='/tmp/8264229Q/work/8264229q_poc_repo/script_to_run';
					'''
                   		} 

				else if (quest == 'RollBack Test') {
			          sh """
				        docker rm -f TESTsvr8264229Q2;
					docker run -d --network customnetwork2 --privileged -h TESTsvr8264229Q2.localdomain --name TESTsvr8264229Q2 --add-host=sddo-vm.localdomain:172.20.113.64 --ip=192.168.20.110 bkup-test-image /sbin/init

			          """
  	                	  echo "ST5 8264229Q: Rollback Test server"

                  }
		}	      
            }
          }

          stage('ST6 8264229Q') {
          	steps {
			          script {
				                if (quest == 'Proceed Production') {
                   			  echo "ST6 8264229Q: Production server is updated"
                   		  } 

				              else if (quest == 'RollBack Test') {
  	            			  echo "ST6 8264229Q: TEST server is rollback."
                   		            }
			        }	
          	}
          }
 }
}
